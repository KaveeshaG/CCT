package Compleity;

import menu.Load_class;

import Weight_structre.Controller_weight;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author PK
 */
public class control_strctr extends javax.swing.JFrame {

    /**
     * Creates new form control_strctr
     */
    public control_strctr() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        total = new javax.swing.JLabel();
        total1 = new javax.swing.JLabel();
        total2 = new javax.swing.JLabel();
        total3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Line no", "Program Statement", "Wtcs", "NC", "Ccspps", "Ccs"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setMinWidth(50);
            jTable3.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable3.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable3.getColumnModel().getColumn(2).setMinWidth(100);
            jTable3.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable3.getColumnModel().getColumn(2).setMaxWidth(100);
            jTable3.getColumnModel().getColumn(3).setMinWidth(100);
            jTable3.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable3.getColumnModel().getColumn(3).setMaxWidth(100);
            jTable3.getColumnModel().getColumn(4).setMinWidth(100);
            jTable3.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable3.getColumnModel().getColumn(4).setMaxWidth(100);
            jTable3.getColumnModel().getColumn(5).setMinWidth(100);
            jTable3.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable3.getColumnModel().getColumn(5).setMaxWidth(100);
        }

        total.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        total.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        total.setText(" ");

        total1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        total1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        total1.setText(" ");

        total2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        total2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        total2.setText(" ");

        total3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        total3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        total3.setText(" ");

        jButton1.setText("Weight related To control structure factor");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        jLabel2.setText("Controller Complexity");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 997, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(total1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(total3, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(total2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(total1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(total3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(28, 28, 28))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
Controller_weight cw;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (cw == null) {
            cw = new Controller_weight(this, true);
        }
        cw.load();
        cw.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(control_strctr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(control_strctr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(control_strctr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(control_strctr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new control_strctr().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    public static javax.swing.JTable jTable3;
    public static javax.swing.JLabel total;
    public static javax.swing.JLabel total1;
    public static javax.swing.JLabel total2;
    public static javax.swing.JLabel total3;
    // End of variables declaration//GEN-END:variables

    public static void filter() {
        int sts = 0;
        int swith = 0;
        int Wtcs = 0;
        String[] code = Load_class.jTextArea1.getText().split("\\n");
        int Ccspps = 0;

        int line1 = 0;
        int switchs = 0;
        int case_value = 0;
        int case_valuett = 0;

        model.Controller controller = model.Create_properties.ReadController("cotroller.prof");

        int if_stm = controller.getIf_stm();
        int for_stm = controller.getFor_stm();
        int switch_stm = controller.getSwitch_stm();
        int case_stm = controller.getCase_stm();
        DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
        df.setRowCount(0);

        String structure_level_1[] = {"if", "for", "while", "do", "switch"};
        String conditions[] = {"==", "!=", ">", "<", ":", "equals"};

        for (String code_line : code) {

            if (!(code_line.trim().equals(""))) {

                line1++;
                int cntrl_line = 0;
                int NC = 0;

                if (code_line.contains("{")) {
                    sts++;
                }
                if (code_line.contains("}")) {
                    sts--;

                }
                if (sts < switchs) {
                    switchs = 0;
                }

                for (int i = 0; i < 5; i++) {

                    String struct = structure_level_1[i];
                    if (code_line.contains(struct) && code_line.contains("{") && code_line.contains("(") && code_line.contains(")")) {

                        for (String condition : conditions) {
                            if (code_line.contains(condition)) {

                                NC = NC + code_line.split(condition).length - 1;
                            }
                        }

                        if (struct.equals("if")) {
                            Wtcs = if_stm;
                        } else if (struct.equals("for")) {
                            Wtcs = for_stm;
                        } else if (struct.equals("while")) {
                            Wtcs = for_stm;
                        } else if (struct.equals("do")) {
                            Wtcs = for_stm;
                        } else if (struct.equals("switch")) {
                            Wtcs = switch_stm;

                            switchs = sts;

                            NC = 1;
                        }

                        cntrl_line++;

                        break;
                    }

                }

                int data1 = 0;
                int data2 = 0;
                int data3 = 0;
                int data4 = 0;

                if (switchs < sts && switchs != 0) {

                    if (cntrl_line > 0) {

                        data1 = Wtcs;
                        data2 = NC;
                        if (case_valuett == 17) {
                            case_valuett = 15;
                        }
                        data3 = case_valuett;
                        data4 = (Wtcs * NC) + case_valuett;

                        case_valuett = data4;

                    }

                } else {

                    if (sts == 3) {

                        if (cntrl_line > 0) {

                            data1 = Wtcs;
                            data2 = NC;
                            data4 = Wtcs * NC;
                            Ccspps = Wtcs * NC;

                            if (switchs != 0) {

                                case_value = data4;
                                Ccspps = 0;

                            }

                        } else if (code_line.contains("case") && code_line.contains(":")) {

                            data1 = case_stm;
                            data2 = 1;
                            data3 = case_value;
                            data4 = (data1 * data2) + data3;
                            case_valuett = data4;

                        }

                    } else {

                        if (cntrl_line > 0) {

                            data1 = Wtcs;
                            data2 = NC;
                            data3 = Ccspps;
                            data4 = (Wtcs * NC) + Ccspps;

                            if (switchs != 0) {

                                case_value = data4;

                            } else {
                                Ccspps = (Wtcs * NC) + Ccspps;
                            }

                        } else if (code_line.contains("case") && code_line.contains(":")) {

                            data1 = case_stm;
                            data2 = 1;
                            data3 = case_value;
                            data4 = (data1 * data2) + data3;
                            case_valuett = data4;

                        }
                    }

                }

                Vector Table_data = new Vector();

                if (cntrl_line > 0 || code_line.contains("case")) {
                    Table_data.add(line1);
                    Table_data.add(code_line);
                    Table_data.add(data1);
                    Table_data.add(data2);
                    Table_data.add(data3);
                    Table_data.add(data4);

                } else {
                    Table_data.add(line1);
                    Table_data.add(code_line);
                    Table_data.add("");
                    Table_data.add("");
                    Table_data.add("");
                    Table_data.add("0");
                }

                df.addRow(Table_data);

            }
        }

        total();

    }

    static DefaultTableModel default_table;

    private static void set() {

        model.AllFactors.setToArray(default_table, 5);
    }

    public static void total() {
        default_table = (DefaultTableModel) jTable3.getModel();

        int Wtcs = 0;
        int NC = 0;
        int Ccspps = 0;
        int Ccs = 0;

        for (int i = 0; i < default_table.getRowCount(); i++) {
            if (!(default_table.getValueAt(i, 5).equals(""))) {

                Ccs = Ccs + Integer.parseInt(default_table.getValueAt(i, 5).toString());
            }
            if (!(default_table.getValueAt(i, 3).equals(""))) {

                NC = NC + Integer.parseInt(default_table.getValueAt(i, 3).toString());
            }
            if (!(default_table.getValueAt(i, 2).equals(""))) {

                Wtcs = Wtcs + Integer.parseInt(default_table.getValueAt(i, 2).toString());
            }
            if (!(default_table.getValueAt(i, 4).equals(""))) {

                Ccspps = Ccspps + Integer.parseInt(default_table.getValueAt(i, 4).toString());
            }

        }
        set();
        total.setText("Wtcs : " + Wtcs);
        total1.setText("NC : " + NC);
        total2.setText("Ccspps : " + Ccspps);
        total3.setText("Ccs : " + Ccs);
    }
}
