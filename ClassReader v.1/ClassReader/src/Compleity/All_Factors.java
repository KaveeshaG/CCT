/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Compleity;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Owner
 */
public class All_Factors extends javax.swing.JFrame {

    /**
     * Creates new form inheritancecomplexty
     */
    public All_Factors() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Total = new javax.swing.JTable();
        total = new javax.swing.JLabel();
        Tcps_Label = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        total1 = new javax.swing.JLabel();
        total2 = new javax.swing.JLabel();
        total3 = new javax.swing.JLabel();
        total4 = new javax.swing.JLabel();
        total5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Complexity of Control Structures");

        jPanel1.setBackground(new java.awt.Color(102, 255, 255));
        jPanel1.setForeground(new java.awt.Color(0, 0, 51));

        Total.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Line no", "Program Statement", "Cs", "Cv", "Cm", "Ci", "Ccp", "Ccs", "Tcps"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(Total);
        if (Total.getColumnModel().getColumnCount() > 0) {
            Total.getColumnModel().getColumn(0).setPreferredWidth(100);
            Total.getColumnModel().getColumn(1).setResizable(false);
            Total.getColumnModel().getColumn(1).setPreferredWidth(500);
            Total.getColumnModel().getColumn(2).setResizable(false);
            Total.getColumnModel().getColumn(2).setPreferredWidth(50);
            Total.getColumnModel().getColumn(3).setResizable(false);
            Total.getColumnModel().getColumn(3).setPreferredWidth(50);
            Total.getColumnModel().getColumn(4).setPreferredWidth(50);
            Total.getColumnModel().getColumn(5).setPreferredWidth(50);
            Total.getColumnModel().getColumn(6).setPreferredWidth(50);
            Total.getColumnModel().getColumn(7).setPreferredWidth(50);
            Total.getColumnModel().getColumn(8).setPreferredWidth(50);
        }

        total.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        total.setForeground(new java.awt.Color(204, 255, 204));
        total.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        total.setText(" ");

        Tcps_Label.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Tcps_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Tcps_Label.setText("Program Complexity :");

        jLabel3.setBackground(new java.awt.Color(204, 204, 204));
        jLabel3.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        jLabel3.setText("All Factors");

        total1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        total1.setForeground(new java.awt.Color(204, 255, 204));
        total1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        total1.setText(" ");

        total2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        total2.setForeground(new java.awt.Color(204, 255, 204));
        total2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        total2.setText(" ");

        total3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        total3.setForeground(new java.awt.Color(204, 255, 204));
        total3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        total3.setText(" ");

        total4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        total4.setForeground(new java.awt.Color(204, 255, 204));
        total4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        total4.setText(" ");

        total5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        total5.setForeground(new java.awt.Color(204, 255, 204));
        total5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        total5.setText(" ");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(total1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(total2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(total4, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(total5, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(total3, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Tcps_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(total1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(total2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(total3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Tcps_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(total4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(total5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(All_Factors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(All_Factors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(All_Factors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(All_Factors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                All_Factors n = new All_Factors();
//                AWTUtilities.setWindowOpaque(n, false);
//                LookAndFeel look = new SubstanceDefaultLookAndFeel();
//
//                try {
//                    UIManager.setLookAndFeel(look);
//                } catch (UnsupportedLookAndFeelException ex) {
//                }
//                SubstanceDefaultLookAndFeel.setCurrentTheme(new SubstanceDarkVioletTheme());
//                SubstanceDefaultLookAndFeel.setCurrentWatermark(new SubstanceFabricWatermark());
//                SubstanceDefaultLookAndFeel.setCurrentGradientPainter(new GradientWaveGradientPainter());
//                SubstanceDefaultLookAndFeel.setCurrentButtonShaper(new ClassicButtonShaper());
//                SubstanceDefaultLookAndFeel.setCurrentBorderPainter("Classic Inner");
//                n.setDefaultLookAndFeelDecorated(true);
                n.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel Tcps_Label;
    public static javax.swing.JTable Total;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    public static javax.swing.JLabel total;
    public static javax.swing.JLabel total1;
    public static javax.swing.JLabel total2;
    public static javax.swing.JLabel total3;
    public static javax.swing.JLabel total4;
    public static javax.swing.JLabel total5;
    // End of variables declaration//GEN-END:variables

    public static void filter_data() {
        ArrayList<ArrayList> size_Data = model.Factors_data.size_Data;
        ArrayList<ArrayList> variable_Data = model.Factors_data.variable_Data;
        ArrayList<ArrayList> methods_Data = model.Factors_data.methods_Data;
        ArrayList<ArrayList> controller_Data = model.Factors_data.controller_Data;
        ArrayList<ArrayList> coupling_Data = model.Factors_data.coupling_Data;
        ArrayList<ArrayList> inheritance_Data = model.Factors_data.inheritance_Data;
        DefaultTableModel df = (DefaultTableModel) Total.getModel();
        int cs2 = 0;
        int Cv2 = 0;
        int Cm2 = 0;
        int Ci2 = 0;
        int Ccp2 = 0;
        int Ccs2 = 0;
        int Tcps2 = 0;
        for (int i = 0; i < size_Data.size(); i++) {

            ArrayList size_fact = size_Data.get(i);
            ArrayList variable_fact = variable_Data.get(i);
            ArrayList method_fact = methods_Data.get(i);
            ArrayList coupl_fact = coupling_Data.get(i);
            ArrayList controller_fact = controller_Data.get(i);

            int cs = 0;
            int Cv = 0;
            int Cm = 0;
            int Ci = 0;
            int Ccp = 0;
            int Ccs = 0;
            int Tcps = 0;
            Vector v = new Vector();
            v.add(size_fact.get(0));
            v.add(size_fact.get(1));
            v.add(size_fact.get(7));
            cs = Integer.parseInt(size_fact.get(7).toString());
            v.add(variable_fact.get(5));
            Cv = Integer.parseInt(variable_fact.get(5).toString());

            v.add(method_fact.get(5));
            Cm = Integer.parseInt(method_fact.get(5).toString());

            for (int j = 0; j < inheritance_Data.size(); j++) {
                ArrayList inheri_fact = inheritance_Data.get(j);

                if (inheri_fact.get(0).equals(size_fact.get(0))) {
                    Ci = Integer.parseInt(inheri_fact.get(5).toString());
                    break;
                }

            }

            if (Ci == 0) {

                v.add("0");
            } else {
                v.add(Ci);
            }

            v.add(coupl_fact.get(15));
            Ccp = Integer.parseInt(coupl_fact.get(15).toString());

            v.add(controller_fact.get(5));
            Ccs = Integer.parseInt(controller_fact.get(5).toString());

            Tcps = cs + Cv + Cm + Ci + Ccp + Ccs;

            v.add(Tcps);
            Tcps2 = Tcps2 + Tcps;
            cs2 = cs2 + cs;
            Cv2 = Cv2 + Cv;
            Cm2 = Cm2 + Cm;
            Ci2 = Ci2 + Ci;
            Ccp2 = Ccp2 + Ccp;
            Ccs2 = Ccs2 + Ccs;
            df.addRow(v);
        }
        total.setText("  Cs : " + cs2);
        total1.setText("Cv : " + Cv2);
        total2.setText("Cm : " + Cm2);
        total3.setText("Ci : " + Ci2);
        total4.setText("Ccp : " + Ccp2);
        total5.setText("Ccs : " + Ccs2);
        Tcps_Label.setText("Program Complexity :" + Tcps2);
    }
}
